#:import Factory kivy.factory.Factory

#:set std_height 40
#:set default_thresh 60
#:set ext ['jpg', 'jpeg', 'png', 'tiff', 'bmp']
#:set ext sum([['*.' + i.lower(), '*.' + i.upper()] for i in ext], [])

# Basic custom class ------------------------------
<AnchorLayout>:
    size_hint_y: None
    height: std_height

<Button>:
    font_size: 20
    size_hint: None, None
    width: self.texture_size[0] + 20
    height: std_height

<InnerBox@BoxLayout>:
    spacing: 10
    size_hint_y: None
    height: self.minimum_height

<Word@Label>:
    size_hint_y: None
    height: self.texture_size[1] + 10
    font_size: 20

<TextInput>:
    font_size: 20
    multiline: False
    line_height: 1
    size_hint: None, None
    height: std_height
    valign: 'center'
    halign: 'center'

<ScrollVIew>:
    bar_width: 10
    scroll_type: ['bars']

<RVBox@BoxLayout>:
    text: ''
    texture: None
    Image:
        texture: root.texture
    Word:
        text: root.text

<Sentence@Label>:
    font_size: 22
    text_size: self.width, None
    size_hint_y: None
    height: self.texture_size[1] + 10

<Space@Label>:
    size_hint_y: None
    height: 15
    text: ''
    canvas.after:
        Line:
            points: self.x, self.y + self.height / 2, self.x + self.width, self.y + self.height / 2   
# --------------------------------------------

<Root>:
    do_default_tab: False
    tab_width: 120
    TabbedPanelItem:
        text: 'Detect'
        id: detect
        DetectWidget:
    TabbedPanelItem:
        text: 'Fv/Fm'
        id: fvfm
        FvFmWidget:
    TabbedPanelItem:
        text: 'Arrange'
        id: arrange
        ArrangeWidget:
    TabbedPanelItem:
        text: 'Split Color'
        id: split_color
        SplitColorWidget:

<FileDialogPopup>:
    size_hint: 0.8, 0.8
    FileChooserIconView:
        id: filechooser
        path: app.home_dir
        filters: ext
        on_submit: 
            root.select(self.selection)
            root.dismiss()
        AnchorLayout:
            anchor_x: 'right'
            InnerBox:
                size_hint_x: None
                width: self.minimum_width
                Button:
                    text: 'Cancel'
                    on_release: 
                        root.cancel()
                        root.dismiss()
                Button:
                    text: 'OK'
                    on_release:
                        root.select(filechooser.selection)
                        root.dismiss()

<ErrorPopup@Popup>:
    size_hint: 0.4, 0.4
    separator_height: 0
    title: ''
    BoxLayout:
        height: self.minimum_height + 40
        orientation: 'vertical'
        padding: 10
        Word:
            text: 'Error'
        Sentence:
            id: message
            size_hint: 1, 1
        AnchorLayout:
            size_hint_y: 0.1
            anchor_x: 'right'
            Button:
                text: 'OK'
                on_release: root.dismiss()

<DetectWidget>:
    padding: 10
    spacing: 20
    InnerBox:  # Image frame
        size_hint: 0.5, 1
        orientation: 'vertical'
        Image:  # Input image
            id: input_img
            size_hint_y: 0.5
        Image:  # Change arrow
            size_hint_y: 0.1
        Image:  # Output image
            id: output_img
            size_hint_y: 0.5
    InnerBox:  # Method frame
        padding: 10, 0, 10, 10
        size_hint: 0.5, 1
        orientation: 'vertical'
        canvas.after:
            Color:
                rgba: 1,1,1,1
            Line:
                rectangle: self.x-2, self.y-2, self.width+2, self.height+2
                width: 2
        Word:  # Method title label
            font_size: 25
            text: 'Method'
        ScrollView:  # Method area
            InnerBox:
                orientation: 'vertical'
                Sentence:
                    text: 'Detects contours from an image.'
                Image:
                    height: 200
                    size_hint_y: None
                    source: root.src_dir + '/img/icon.png'
                Space:
                InnerBox:  # Step 1 Input
                    Sentence:
                        text: 'Step 1. Select leaf image'
                    Button:
                        text: 'Select'
                        on_release: Factory.FileDialogPopup(select=root.input_img, cancel=root.cancel).open()
                Space:
                InnerBox:  # Step 2 Threshold
                    orientation: 'vertical'
                    Sentence:
                        text: 'Step 2. Set threshold for extract'
                    Image:
                        size_hint_y: None
                        height: 50
                    InnerBox:
                        Button:
                            text: 'Reset'
                            on_release: thresh_slider.value = default_thresh
                        Slider:
                            id: thresh_slider
                            size_hint_y: None
                            height: std_height
                            range: 0, 255
                            step: 1
                            value: default_thresh
                        TextInput:
                            text: '{:.0f}'.format(thresh_slider.value)
                            input_filter: 'int'
                            on_text_validate: 
                                if self.text == '': self.text = '0'
                                elif int(self.text) > 255: self.text = '255'
                                elif int(self.text) < 0: self.text = '0'
                                thresh_slider.value = int(self.text)
                Space:
                InnerBox:  # Step 3 Run
                    Sentence:
                        text: 'Step 3. Extract leaf.'
                    Button:
                        text: 'RUN'
                        on_press: root.run()
                Space:
                AnchorLayout:  # Next button
                    anchor_x: 'right'
                    Button:
                        text: 'Next->'
                        #on_release: app.root.switch_to(app.root.ids.fvfm)
                        on_release: app.leaf_img = 'src/img/icon.png'

<FvFmWidget>:
    padding: 10
    spacing: 20
    InnerBox:  # Image frame
        size_hint: 0.5, 1
        orientation: 'vertical'
        Image:  # Input image
            id: input_img
            size_hint_y: 0.5
        Image:  # Change arrow
            size_hint_y: 0.1
        Image:  # Output image
            id: output_img
            size_hint_y: 0.5
    BoxLayout:  # Fv/Fm list frame
        size_hint_x: 0.2
        orientation: 'vertical'
        Word:
            font_size: 25
            text: 'Fv/Fm value list'
        RecycleView:
            id: rv
            viewclass: 'RVBox'
            bar_width: dp(10)
            scroll_type: ["bars", "content"]
            scroll_wheel_distance: sp(50)
            RecycleBoxLayout:
                default_size: None, sp(50)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(8)
    InnerBox:  # Method frame
        padding: 10, 0, 10, 10
        size_hint: 0.5, 1
        orientation: 'vertical'
        canvas.after:
            Color:
                rgba: 1,1,1,1
            Line:
                rectangle: self.x-2, self.y-2, self.width+2, self.height+2
                width: 2
        Word:  # Method title label
            font_size: 25
            text: 'Method'
        ScrollView:  # Method area
            InnerBox:
                orientation: 'vertical'
                Sentence:
                    text: 'Reads the Fv/Fm scale bar from an image and creates its value and color correspondence table. Also, extract only the leaf area from an image.'
                Image:
                    height: 200
                    size_hint_y: None
                    source: root.src_dir + '/img/icon.png'
                Space:
                InnerBox:  # Step 1 Input
                    Sentence:
                        text: 'Step 1. Select fvfm result image'
                    Button:
                        text: 'Select'
                        on_release: Factory.FileDialogPopup(select=root.input_img, cancel=root.cancel).open()
                Space:
                InnerBox:  # Step 2 Threshold
                    orientation: 'vertical'
                    Sentence:
                        text: 'Step 2. Set threshold for extract'
                    Image:
                        size_hint_y: None
                        height: 50
                    InnerBox:
                        Button:
                            text: 'Reset'
                            on_release: thresh_slider.value = default_thresh
                        Slider:
                            id: thresh_slider
                            size_hint_y: None
                            height: std_height
                            range: 0, 255
                            step: 1
                            value: default_thresh
                        TextInput:
                            text: '{:.0f}'.format(thresh_slider.value)
                            input_filter: 'int'
                            on_text_validate: 
                                if self.text == '': self.text = '0'
                                elif int(self.text) > 255: self.text = '255'
                                elif int(self.text) < 0: self.text = '0'
                                thresh_slider.value = int(self.text)
                Space:
                InnerBox:  # Step 3 Run
                    Sentence:
                        text: 'Step 3. Extract leaf.'
                    Button:
                        text: 'RUN'
                        on_press: root.run()
                Space:
                AnchorLayout:  # Next button
                    anchor_x: 'right'
                    Button:
                        text: 'Next->'
                        on_release: app.root.switch_to(app.root.ids.arrange)         
        
<ArrangeWidget>:
    BoxLayout:
        size_hint_x: 0.35
        orientation: 'vertical'
        padding: 20, 20,20,20
        Word:
            font_size: 28
            text: 'Leaf'
            size_hint_y: None
            height: self.texture_size[1]
        Image:
            #source: app.leaf_img
            texture: app.leaf_img
        Word:
            font_size: 20
            text: 'v'
            size_hint_y: None
            height: self.texture_size[1] + 40
        Image:
    BoxLayout:
        size_hint_x: 0.35
        orientation: 'vertical'
        padding: 20, 20,20,20
        Word:
            font_size: 28
            text: 'FvFm'
            size_hint_y: None
            height: self.texture_size[1]
        Image:
        Word:
            font_size: 20
            text: 'v'
            size_hint_y: None
            height: self.texture_size[1] + 40
        Image:
    BoxLayout:    # Method frame
        size_hint_x: 0.3
        orientation: 'vertical'
        Word:
            font_size: 28
            text: 'Method'
            size_hint_y: None
            height: self.texture_size[1]
        Word:
            font_size: 25
            text: 'setumeiiiiiiiiiiiiiiiiiiiiiiiiisurushfiashegihaifhaiefhaidbfuefhigagnahgiegkskdghiehgoslkdhhfieogkhoasgoieghoasfkiiiiiiiiiiii'
            text_size: self.width, None
            size_hint_y: None
            height: self.texture_size[1]
        Image:
        AnchorLayout:
            size_hint_y: None
            height: button.height
            anchor_x: 'center'
            Button:
                id: button
                font_size: 25
                text: 'RUN'
                size_hint: None, None
                size: self.texture_size
        BoxLayout:
            size_hint_y: None
            height: self.minimum_height
            AnchorLayout:
                size_hint_y: None
                height: button.height
                anchor_x: 'left'
                Button:
                    font_size: 25
                    text: 'Back'
                    size_hint: None, None
                    size: self.texture_size
            AnchorLayout:
                size_hint_y: None
                height: button.height
                anchor_x: 'right'
                Button:
                    font_size: 25
                    text: 'Next'
                    size_hint: None, None
                    size: self.texture_size
    
<AnalyzeWidget>:
    orientation: 'vertical'
    BoxLayout:

<Widget>:
    canvas.after:
        Color:
            rgba: 1,0,1,1
        Line:
            rectangle: self.x+1, self.y+1, self.width-1, self.height-1
            dash_offset: 5
            dash_length: 3


